# https://brilliant.org/practice/recursive-backtracking/?subtopic=types-and-data-structures&chapter=trees

# 7% -> 13% !!! 1/14 -> 2/15 or 1/15 -> 2/16 !!!

def find(A, row, col):
    if row == 3:
        return A[row][col]
    return max(find(A, row+1, col), find(A, row+1, col+1)) + A[row][col]



A = [[9],
     [75,59],
     [57,51,32],
     [63,14,83,29],
     [67,93,35,21,87],
     [9,21,56,3,58,87],
     [10,86,100,15,27,68,46],
     [85,95,54,5,22,60,2,51],
     [33,7,9,62,29,13,3,24,2],
     [17,54,23,59,81,59,54,24,2,100],
     [19,29,63,37,25,75,31,17,2,81,78],
     [21,96,67,59,2,72,60,64,4,66,8,82],
     [51,67,52,30,64,80,14,85,89,98,82,70,9],
     [58,88,23,16,56,52,68,65,89,56,87,43,2,37],
     [61,64,59,56,28,25,63,93,91,43,85,41,99,83,81]]

B = [[2],
     [4,1],
     [5,2,4],
     [3,9,0,5]]

print(find(B,0,0))
